# The statistics maintained by ZAP
# Note that is file is currently maintained manually and should be kept in alphabetic key order.
---

- key: automation.spider.urls.added
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/automation/src/main/java/org/zaproxy/addon/automation/jobs/SpiderJob.java
  desc: The number of URLs added by the standard spider running in the automation framework

- key: domxss.attack.<vector>
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of times the given DOM XSS attack vector was used

- key: domxss.gets.count
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of GET requests made by the DOM XSS scan rule

- key: domxss.scan.count
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of times the DOM XSS rule was run against a target URL

- key: domxss.vulns.div1
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of DOM XSS vulnerabilities found when retrieving div elements

- key: domxss.vulns.div2
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of DOM XSS vulnerabilities found when accessing div elements

- key: domxss.vulns.get1
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of DOM XSS vulnerabilities found using the first GET request

- key: domxss.vulns.get2
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of DOM XSS vulnerabilities found using the first second GET request

- key: domxss.vulns.input1
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of DOM XSS vulnerabilities found when retrieving input elements

- key: domxss.vulns.possibleDomXSSTriggers2
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of DOM XSS vulnerabilities found using possibleDomXSSTriggers2

- key: domxss.vulns.possibleDomXSSTriggers3
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/domxss/src/main/java/org/zaproxy/zap/extension/domxss/DomXssScanRule.java
  desc: The number of DOM XSS vulnerabilities found using possibleDomXSSTriggers3

- key: openapi.urls.added
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/openapi/src/main/java/org/zaproxy/zap/extension/openapi/HistoryPersister.java
  desc: The number of URLs added by importing an OpenAPI definition

- key: soap.urls.added
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/soap/src/main/java/org/zaproxy/zap/extension/soap/WSDLCustomParser.java
  desc: The number of URLs added by importing a SOAP definition

- key: spiderAjax.urls.added
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/spiderAjax/src/main/java/org/zaproxy/zap/extension/spiderAjax/automation/AjaxSpiderJob.java
  desc: The number of URLs found by the ajax spider

- key: sqldb.conn.closed
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/db/sql/DbSQL.java
  desc: The number of times the ZAP db has been closed

- key: sqldb.conn.openned
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/db/sql/DbSQL.java
  desc: The number of times the ZAP db has been openned

- key: sqldb.<key>.calls
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/db/sql/DbSQL.java
  desc: The number of times the SQL statement with the given key has been called

- key: sqldb.<key>.pool
  scope: global
  type: highwatermark
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/db/sql/DbSQL.java
  desc: The highest number of prepared statements in the pool for the given key

- key: sqldb.<key>.time
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/db/sql/DbSQL.java
  desc: The cumulative number of milliseconds taken by the corresponding SQL statements

- key: stats.acsrf.<token-name>
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/anticsrf/AntiCsrfDetectScanner.java
  desc: The number of times the given token is present in an HTTP response

- key: stats.alertFilter.<rule-id>.risk.<risk>
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/alertFilters/src/main/java/org/zaproxy/zap/extension/alertFilters/ExtensionAlertFilters.java
  desc: The number of times the given rule has been changed to the given risk by an alert filter

- key: stats.api.call.<format>.<component>.<request-type>.<name>
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/api/API.java
  desc: The number of times the given API endpoint has been called - from 2.11.0

- key: stats.api.error.<format>.<component>.<request-type>.<name>
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/api/API.java
  desc: The number of times the given API endpoint has returned an error - from 2.11.0

- key: stats.ascan.started
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/Scanner.java
  desc: The number of times the active scanner has been started - from 2.11.0

- key: stats.ascan.stopped
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/Scanner.java
  desc: The number of times the active scanner has been stopped (as opposed to finishing) - from 2.11.0

- key: stats.ascan.time
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/Scanner.java
  desc: The cumulative number of milliseconds that active scanner has run for - from 2.11.0

- key: stats.ascan.urls
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/Scanner.java
  desc: The number of URLs the active scanner has requested - from 2.11.0

- key: stats.ascan.<rule-id>.alerts
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/PluginStats.java
  desc: The number of alerts the given active scan rule has raised - from 2.11.0

- key: stats.ascan.<rule-id>.skipped
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/PluginStats.java
  desc: The number of alerts the given active scan rule has been skipped - from 2.11.0

- key: stats.ascan.<rule-id>.started
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/PluginStats.java
  desc: The number of alerts the given active scan rule has been started - from 2.11.0

- key: stats.ascan.<rule-id>.time
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/PluginStats.java
  desc: The cumulative number of milliseconds that the given active scan rule has run for - from 2.11.0

- key: stats.ascan.<rule-id>.urls
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/parosproxy/paros/core/scanner/PluginStats.java
  desc: The number of URLs that the given active scan rule has requested - from 2.11.0

- key: stats.auth.failure
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/authentication/AuthenticationHelper.java
  desc: The number of authentication failures

- key: stats.auth.state.assumedin
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/authentication/AuthenticationMethod.java
  desc: The number of messages between successful polls that are assumed to be logged in

- key: stats.auth.state.loggedin
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/authentication/AuthenticationMethod.java
  desc: The number of messages that include the logged-in indicator

- key: stats.auth.state.loggedout
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/authentication/AuthenticationMethod.java
  desc: The number of messages that include the logged-out indicator

- key: stats.auth.state.noindicator
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/authentication/AuthenticationMethod.java
  desc: The number of messages where no logged in or out indicators have been set in the context

- key: stats.auth.state.unknown
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/authentication/AuthenticationMethod.java
  desc: The number of messages which don't contain either logged in or out indicators

- key: stats.auth.success
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/authentication/AuthenticationHelper.java
  desc: The number of authentication successes

- key: stats.break.drop
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/brk/ExtensionBreak.java
  desc: The number of times a request or response has been dropped via a break point - from 2.11.0

- key: stats.break.hit
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/brk/ExtensionBreak.java
  desc: The number of times a break point has been hit - from 2.11.0

- key: stats.break.step
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/brk/ExtensionBreak.java
  desc: The number of times a break point has been stepped through - from 2.11.0

- key: stats.code.<response-code>
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/scanner/StatsPassiveScanner.java
  desc: The number of messages which include the given response code

- key: stats.contentType.<content-type>
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/scanner/StatsPassiveScanner.java
  desc: The number of messages which include the given content type

- key: stats.pscan.reqBodyTooBig
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/PassiveScanThread.java
  desc: The number of requests that have not been passively scanned as they exceed the configured max body size to scan

- key: stats.pscan.respBodyTooBig
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/PassiveScanThread.java
  desc: The number of responses that have not been passively scanned as they exceed the configured max body size to scan

- key: stats.pscan.<rule-id>.alerts
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/PluginPassiveScanner.java
  desc: The number of alerts raised by the given scan rule - from 2.11.0

- key: stats.pscan.<rule-id>.time
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/PassiveScanThread.java
  desc: The cumulative number of milliseconds taken to run the given scan rule - from 2.11.0

- key: stats.pscan.<rule-name>
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/PassiveScanThread.java
  desc: The cumulative number of milliseconds taken to run the given scan rule - DEPRECATED - use stats.pscan.<rule-id>.time instead

- key: stats.responseTime.<time-slice>
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/scanner/StatsPassiveScanner.java
  desc: The number of messages with response times in milliseconds the given (logerithmic) time slice (1, 2, 4, 8 etc)

- key: stats.script.call.<engine-name>.<type>
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/script/ExtensionScript.java
  desc: The number of times the given type of script has been called - from 2.11.0

- key: stats.script.error.<engine-name>.<type>
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/script/ExtensionScript.java
  desc: The number of times the given type of script has been returned an error - from 2.11.0

- key: stats.spider.started
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/spider/SpiderScan.java
  desc: The number of times the spider has been started - from 2.11.0

- key: stats.spider.stopped
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/spider/SpiderScan.java
  desc: The number of times the spider has been stopped (as opposed to completing) - from 2.11.0

- key: stats.spider.time
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/spider/SpiderScan.java
  desc: The total number of milliseconds the spider has run for across all scans - from 2.11.0

- key: stats.spider.url.error
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/spider/SpiderScan.java
  desc: The number of URLs the spider has found but failed to access - from 2.11.0

- key: stats.spider.url.found
  scope: global
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/spider/SpiderScan.java
  desc: The number of URLs the spider has found and accessed - from 2.11.0

- key: stats.tag.<tag-name>
  scope: site
  type: counter
  repo: zaproxy/zaproxy
  code: main/zap/src/main/java/org/zaproxy/zap/extension/pscan/scanner/RegexAutoTagScanner.java
  desc: The number of messages containing the given tag

- key: stats.websockets.bytes.incoming
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/websocket/src/main/java/org/zaproxy/zap/extension/websocket/WebSocketProxy.java
  desc: The cumulative number of incoming websocket bytes received

- key: stats.websockets.bytes.outgoing
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/websocket/src/main/java/org/zaproxy/zap/extension/websocket/WebSocketProxy.java
  desc: The cumulative number of outgoing websocket bytes sent

- key: stats.websockets.close
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/websocket/src/main/java/org/zaproxy/zap/extension/websocket/WebSocketProxy.java
  desc: The number of times a websocket connection was closed

- key: stats.websockets.count.incoming
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/websocket/src/main/java/org/zaproxy/zap/extension/websocket/WebSocketProxy.java
  desc: The number of incoming websocket messages

- key: stats.websockets.count.outgoing
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/websocket/src/main/java/org/zaproxy/zap/extension/websocket/WebSocketProxy.java
  desc: The number of outgoing websocket messages

- key: stats.websockets.opcode.<opcode>
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/websocket/src/main/java/org/zaproxy/zap/extension/websocket/WebSocketProxy.java
  desc: The number of websocket messages by opcode

- key: stats.websockets.open
  scope: site
  type: counter
  repo: zaproxy/zap-extensions
  code: main/zap/src/main/java/org/zaproxy/zap/extension/websocket/WebSocketProxy.java
  desc: The number of times a websocket connection was opened

- key: stats.websockets.pscan.<pscanname>
  scope: global
  type: counter
  repo: zaproxy/zap-extensions
  code: main/addOns/websocket/src/main/java/org/zaproxy/zap/extension/websocket/pscan/WebSocketPassiveScanThread.java
  desc: The number of times the given rule was run against a message